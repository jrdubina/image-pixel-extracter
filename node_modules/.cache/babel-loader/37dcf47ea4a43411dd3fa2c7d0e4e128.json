{"ast":null,"code":"var _jsxFileName = \"/Users/jareddubina/Desktop/Project-Image-Sizer/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      identifedAs: '',\n      pictures: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture)\n    });\n  }\n\n  identifyImage(image) {\n    const Clarifai = require('clarifai');\n\n    const clarifaiApp = new Clarifai.App({\n      apiKey: 'ba7fec128a0243c18186d47d861edb35'\n    });\n    clarifaiApp.models.initModel({\n      id: Clarifai.GENERAL_MODEL,\n      version: \"aa7f35c01e0642fda5cf400f543e7c40\"\n    }).then(generalModel => {\n      return generalModel.predict(image);\n    }).then(response => {\n      let concepts = response['outputs'][0]['data']['concepts'];\n      console.log(concepts);\n\n      for (let i = 0; i < concepts.length; i++) {\n        if (concepts[i].name === \"looking\") {\n          console.log('true => ' + concepts[i].name);\n          return;\n        } else {\n          console.log('false => ' + concepts[i].name);\n        }\n      }\n    });\n  }\n\n  render() {\n    this.identifyImage(\"https://jareddubina.com/images/portfolio/jrd.png\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Hello World\"), React.createElement(ImageUploader, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: this.onDrop,\n      imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n      maxFileSize: 5242880,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), document.getElementById(\"image-sizer-app\"));","map":{"version":3,"sources":["/Users/jareddubina/Desktop/Project-Image-Sizer/src/index.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","identifedAs","pictures","onDrop","bind","picture","setState","concat","identifyImage","image","Clarifai","require","clarifaiApp","apiKey","models","initModel","id","GENERAL_MODEL","version","then","generalModel","predict","response","concepts","console","log","i","length","name","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE,EADD;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAb;AAIA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA;;AAEDD,EAAAA,MAAM,CAACE,OAAD,EAAU;AACT,SAAKC,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAX,CAAoBK,MAApB,CAA2BF,OAA3B;AADA,KAAd;AAGH;;AAEJG,EAAAA,aAAa,CAAEC,KAAF,EAAS;AACrB,UAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,UAAMC,WAAW,GAAG,IAAIF,QAAQ,CAACd,GAAb,CAAiB;AACpCiB,MAAAA,MAAM,EAAE;AAD4B,KAAjB,CAApB;AAIAD,IAAAA,WAAW,CAACE,MAAZ,CAAmBC,SAAnB,CAA6B;AAACC,MAAAA,EAAE,EAAEN,QAAQ,CAACO,aAAd;AAA6BC,MAAAA,OAAO,EAAE;AAAtC,KAA7B,EACMC,IADN,CACWC,YAAY,IAAI;AACpB,aAAOA,YAAY,CAACC,OAAb,CAAqBZ,KAArB,CAAP;AACD,KAHN,EAIMU,IAJN,CAIWG,QAAQ,IAAI;AAChB,UAAIC,QAAQ,GAAGD,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,EAA+B,UAA/B,CAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,WAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGH,QAAQ,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvC,YAAIH,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAAZ,KAAqB,SAAzB,EAAoC;AACnCJ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAArC;AACD;AACC,SAHD,MAGO;AACNJ,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAAtC;AACA;AACD;AACF,KAhBN;AAiBE;;AAEHC,EAAAA,MAAM,GAAI;AACT,SAAKrB,aAAL,CAAmB,kDAAnB;AAEA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEE,oBAAC,aAAD;AACY,MAAA,QAAQ,EAAE,IADtB;AAEY,MAAA,UAAU,EAAC,eAFvB;AAGY,MAAA,QAAQ,EAAE,KAAKL,MAH3B;AAIY,MAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAJ1B;AAKY,MAAA,WAAW,EAAE,OALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD;AAYA;;AA1D+C;AA+DjDR,QAAQ,CAACkC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport default class App extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\t\n\t\tthis.state = { \n\t\t\tidentifedAs: '',\n\t\t\tpictures: []\n\t\t};\n\t\tthis.onDrop = this.onDrop.bind(this);\n\t}\n\n\tonDrop(picture) {\n        this.setState({\n            pictures: this.state.pictures.concat(picture),\n        });\n    }\n\n\tidentifyImage (image) {\n\t\tconst Clarifai = require('clarifai');\n\n\t\tconst clarifaiApp = new Clarifai.App({\n\t\t\tapiKey: 'ba7fec128a0243c18186d47d861edb35'\n\t\t});\n\n\t\tclarifaiApp.models.initModel({id: Clarifai.GENERAL_MODEL, version: \"aa7f35c01e0642fda5cf400f543e7c40\"})\n\t      .then(generalModel => {\n\t        return generalModel.predict(image);\n\t      })\n\t      .then(response => {\n\t        let concepts = response['outputs'][0]['data']['concepts']\n\t        console.log(concepts)\n\n\t        for (let i=0; i < concepts.length; i++) {\n\t        \tif (concepts[i].name === \"looking\") {\n\t        \t\tconsole.log('true => ' + concepts[i].name)\n\t      \t\t\treturn\n\t        \t} else {\n\t        \t\tconsole.log('false => ' + concepts[i].name)\n\t        \t}\n\t        }\n\t      })\n\t  }\n\n\trender () {\n\t\tthis.identifyImage(\"https://jareddubina.com/images/portfolio/jrd.png\");\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Hello World</h1>\n\t\t\t\t <ImageUploader\n\t                withIcon={true}\n\t                buttonText='Choose images'\n\t                onChange={this.onDrop}\n\t                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n\t                maxFileSize={5242880}\n\t            />\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\n\nReactDOM.render(<App />, document.getElementById(\"image-sizer-app\"));"]},"metadata":{},"sourceType":"module"}