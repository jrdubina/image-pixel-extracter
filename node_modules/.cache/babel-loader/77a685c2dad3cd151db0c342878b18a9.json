{"ast":null,"code":"var _jsxFileName = \"/Users/jareddubina/Desktop/Project-Image-Sizer/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FileBase64 from 'react-file-base64';\nimport { Base64 } from 'js-base64';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      identifedAs: '',\n      files: '',\n      image: null\n    };\n  }\n\n  getFiles(files) {\n    this.setState({\n      files: files\n    });\n    let base64 = this.state.files[0].base64;\n    this.identifyImage(base64);\n  }\n\n  identifyImage(picture) {\n    const Clarifai = require('clarifai');\n\n    const clarifaiApp = new Clarifai.App({\n      apiKey: 'ba7fec128a0243c18186d47d861edb35'\n    });\n    const pictureBase64 = picture.split(',')[1];\n    clarifaiApp.models.predict(Clarifai.GENERAL_MODEL, {\n      base64: pictureBase64\n    }).then(response => {\n      let concepts = response['outputs'][0]['data']['concepts'];\n      console.log(concepts);\n      this.checkIfGolfBallExist(concepts, pictureBase64, picture);\n    }).catch(err => console.log(err));\n  }\n\n  checkIfGolfBallExist(concepts, pictureBase64, picture) {\n    for (let i = 0; i < concepts.length; i++) {\n      if (concepts[i].name === \"golf\") {\n        console.log('true => ' + concepts[i].name);\n        this.drawImage(pictureBase64, picture);\n        return;\n      }\n    }\n\n    alert('Cannot detect a golf ball in your image');\n  }\n\n  drawImage(photo, picture) {\n    const base64 = Base64.atob(photo);\n    this.setState({\n      image: picture\n    });\n  }\n\n  drawTheCanvas(photo, picture) {\n    const base64 = Base64.atob(photo);\n    const canvas = document.getElementById('uploadedImageCanvas');\n    const ctx = canvas.getContext('2d');\n    const image = new Image();\n\n    image.onload = function () {\n      ctx.drawImage(image, 500, 500);\n    };\n\n    image.src = picture;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FileBase64, {\n      multiple: true,\n      onDone: this.getFiles.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), this.state.image && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"uploadedImageCanvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: \"\".concat(this.state.image),\n      alt: \"\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}), document.getElementById(\"image-sizer-app\"));","map":{"version":3,"sources":["/Users/jareddubina/Desktop/Project-Image-Sizer/src/index.js"],"names":["React","ReactDOM","FileBase64","Base64","App","Component","constructor","props","state","identifedAs","files","image","getFiles","setState","base64","identifyImage","picture","Clarifai","require","clarifaiApp","apiKey","pictureBase64","split","models","predict","GENERAL_MODEL","then","response","concepts","console","log","checkIfGolfBallExist","catch","err","i","length","name","drawImage","alert","photo","atob","drawTheCanvas","canvas","document","getElementById","ctx","getContext","Image","onload","src","render","bind","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE,EADD;AAEZC,MAAAA,KAAK,EAAE,EAFK;AAGZC,MAAAA,KAAK,EAAE;AAHK,KAAb;AAKA;;AAEDC,EAAAA,QAAQ,CAACF,KAAD,EAAO;AACX,SAAKG,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAEA;AAAT,KAAd;AACA,QAAII,MAAM,GAAG,KAAKN,KAAL,CAAWE,KAAX,CAAiB,CAAjB,EAAoBI,MAAjC;AAEA,SAAKC,aAAL,CAAmBD,MAAnB;AACD;;AAEHC,EAAAA,aAAa,CAAEC,OAAF,EAAW;AACvB,UAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,UAAMC,WAAW,GAAG,IAAIF,QAAQ,CAACb,GAAb,CAAiB;AACpCgB,MAAAA,MAAM,EAAE;AAD4B,KAAjB,CAApB;AAIA,UAAMC,aAAa,GAAGL,OAAO,CAACM,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAtB;AAEAH,IAAAA,WAAW,CAACI,MAAZ,CAAmBC,OAAnB,CAA2BP,QAAQ,CAACQ,aAApC,EAAmD;AAACX,MAAAA,MAAM,EAAEO;AAAT,KAAnD,EACEK,IADF,CACQC,QAAD,IAAc;AACd,UAAIC,QAAQ,GAAGD,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,EAA+B,UAA/B,CAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,WAAKG,oBAAL,CAA0BH,QAA1B,EAAoCP,aAApC,EAAmDL,OAAnD;AACD,KANN,EAOEgB,KAPF,CAOSC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAPjB;AAQE;;AAEDF,EAAAA,oBAAoB,CAAEH,QAAF,EAAYP,aAAZ,EAA2BL,OAA3B,EAAoC;AACvD,SAAK,IAAIkB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGN,QAAQ,CAACO,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACnC,UAAIN,QAAQ,CAACM,CAAD,CAAR,CAAYE,IAAZ,KAAqB,MAAzB,EAAiC;AAChCP,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,QAAQ,CAACM,CAAD,CAAR,CAAYE,IAArC;AACA,aAAKC,SAAL,CAAgBhB,aAAhB,EAA+BL,OAA/B;AACD;AACC;AACD;;AACDsB,IAAAA,KAAK,CAAC,yCAAD,CAAL;AACJ;;AAEDD,EAAAA,SAAS,CAAEE,KAAF,EAASvB,OAAT,EAAkB;AAC1B,UAAMF,MAAM,GAAGX,MAAM,CAACqC,IAAP,CAAYD,KAAZ,CAAf;AAEA,SAAK1B,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAEK;AAAT,KAAd;AACA;;AAEDyB,EAAAA,aAAa,CAAEF,KAAF,EAASvB,OAAT,EAAkB;AAC9B,UAAMF,MAAM,GAAGX,MAAM,CAACqC,IAAP,CAAYD,KAAZ,CAAf;AACA,UAAMG,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAf;AACF,UAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMnC,KAAK,GAAG,IAAIoC,KAAJ,EAAd;;AAEApC,IAAAA,KAAK,CAACqC,MAAN,GAAe,YAAW;AACxBH,MAAAA,GAAG,CAACR,SAAJ,CAAc1B,KAAd,EAAqB,GAArB,EAA0B,GAA1B;AACD,KAFD;;AAGAA,IAAAA,KAAK,CAACsC,GAAN,GAAYjC,OAAZ;AACE;;AAEHkC,EAAAA,MAAM,GAAI;AACT,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,UAAD;AACF,MAAA,QAAQ,EAAG,IADT;AAEF,MAAA,MAAM,EAAG,KAAKtC,QAAL,CAAcuC,IAAd,CAAmB,IAAnB,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,EAIM,KAAK3C,KAAL,CAAWG,KAAX,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,EAAE,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAK,MAAA,GAAG,YAAK,KAAKH,KAAL,CAAWG,KAAhB,CAAR;AAAiC,MAAA,GAAG,EAAC,EAArC;AAAwC,MAAA,KAAK,EAAE;AAACyC,QAAAA,KAAK,EAAC;AAAP,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CALL,CADD;AAaA;;AAhF+C;AAqFjDnD,QAAQ,CAACiD,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBP,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FileBase64 from 'react-file-base64';\nimport { Base64 } from 'js-base64';\n\nexport default class App extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\t\n\t\tthis.state = { \n\t\t\tidentifedAs: '',\n\t\t\tfiles: '',\n\t\t\timage: null\n\t\t};\n\t}\n\n\tgetFiles(files){\n\t    this.setState({ files: files })\n\t    let base64 = this.state.files[0].base64;\n\n\t    this.identifyImage(base64);\n\t  }\n\n\tidentifyImage (picture) {\n\t\tconst Clarifai = require('clarifai');\n\n\t\tconst clarifaiApp = new Clarifai.App({\n\t\t\tapiKey: 'ba7fec128a0243c18186d47d861edb35'\n\t\t});\n\n\t\tconst pictureBase64 = picture.split(',')[1];\n\n\t\tclarifaiApp.models.predict(Clarifai.GENERAL_MODEL, {base64: pictureBase64})\n\t\t\t.then((response) => {\n\t        let concepts = response['outputs'][0]['data']['concepts']\n\t        console.log(concepts)\n\n\t        this.checkIfGolfBallExist(concepts, pictureBase64, picture);\n\t      })\n\t\t\t.catch((err) => console.log(err))\n\t  }\n\n\t  checkIfGolfBallExist (concepts, pictureBase64, picture) {\n\t  \tfor (let i=0; i < concepts.length; i++) {\n        \tif (concepts[i].name === \"golf\") {\n        \t\tconsole.log('true => ' + concepts[i].name)\n        \t\tthis.drawImage (pictureBase64, picture);\n      \t\t\treturn;\n        \t}\n        }\n        alert('Cannot detect a golf ball in your image');\n\t  }\n\n\t  drawImage (photo, picture) {\n\t  \tconst base64 = Base64.atob(photo);\n\n\t  \tthis.setState({ image: picture})\n\t  }\n\n\t  drawTheCanvas (photo, picture) {\n\t  \tconst base64 = Base64.atob(photo);\n\t  \tconst canvas = document.getElementById('uploadedImageCanvas');\n\t\tconst ctx = canvas.getContext('2d');\n\t\tconst image = new Image();\n\n\t\timage.onload = function() {\n\t\t  ctx.drawImage(image, 500, 500);\n\t\t};\n\t\timage.src = picture;\n\t  }\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t            <FileBase64\n\t\t\t        multiple={ true }\n\t\t\t        onDone={ this.getFiles.bind(this) } />\n\t\t\t    { this.state.image &&\n\t\t\t    \t<div>\n\t\t\t    \t\t<canvas id='uploadedImageCanvas'></canvas>\n\t\t\t    \t\t<img src={`${this.state.image}`} alt='' style={{width:'100%'}} />\n\t\t\t    \t</div>\n\t\t\t    }\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\n\nReactDOM.render(<App />, document.getElementById(\"image-sizer-app\"));"]},"metadata":{},"sourceType":"module"}