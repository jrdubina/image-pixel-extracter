{"ast":null,"code":"var _jsxFileName = \"/Users/jareddubina/Desktop/Project-Image-Sizer/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FileBase64 from 'react-file-base64';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      identifedAs: '',\n      files: []\n    };\n  }\n\n  getFiles(files) {\n    this.setState({\n      files: files\n    });\n  }\n\n  identifyImage(picture) {\n    const Clarifai = require('clarifai');\n\n    const clarifaiApp = new Clarifai.App({\n      apiKey: 'ba7fec128a0243c18186d47d861edb35'\n    });\n    clarifaiApp.models.initModel({\n      id: Clarifai.GENERAL_MODEL,\n      version: \"aa7f35c01e0642fda5cf400f543e7c40\"\n    }).then(generalModel => {\n      return generalModel.predict(picture);\n    }).then(response => {\n      let concepts = response['outputs'][0]['data']['concepts'];\n      console.log(concepts);\n\n      for (let i = 0; i < concepts.length; i++) {\n        if (concepts[i].name === \"looking\") {\n          console.log('true => ' + concepts[i].name);\n          return;\n        } else {\n          console.log('false => ' + concepts[i].name);\n        }\n      }\n    });\n  }\n\n  render() {\n    //this.identifyImage(\"https://jareddubina.com/images/portfolio/jrd.png\");\n    this.identifyImage(files.base64);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FileBase64, {\n      multiple: true,\n      onDone: this.getFiles.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), document.getElementById(\"image-sizer-app\"));","map":{"version":3,"sources":["/Users/jareddubina/Desktop/Project-Image-Sizer/src/index.js"],"names":["React","ReactDOM","FileBase64","App","Component","constructor","props","state","identifedAs","files","getFiles","setState","identifyImage","picture","Clarifai","require","clarifaiApp","apiKey","models","initModel","id","GENERAL_MODEL","version","then","generalModel","predict","response","concepts","console","log","i","length","name","render","base64","bind","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE,EADD;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAAb;AAIA;;AAEDC,EAAAA,QAAQ,CAACD,KAAD,EAAO;AACX,SAAKE,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAEA;AAAT,KAAd;AACD;;AAEHG,EAAAA,aAAa,CAAEC,OAAF,EAAW;AACvB,UAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,UAAMC,WAAW,GAAG,IAAIF,QAAQ,CAACX,GAAb,CAAiB;AACpCc,MAAAA,MAAM,EAAE;AAD4B,KAAjB,CAApB;AAIAD,IAAAA,WAAW,CAACE,MAAZ,CAAmBC,SAAnB,CAA6B;AAACC,MAAAA,EAAE,EAAEN,QAAQ,CAACO,aAAd;AAA6BC,MAAAA,OAAO,EAAE;AAAtC,KAA7B,EACMC,IADN,CACWC,YAAY,IAAI;AACpB,aAAOA,YAAY,CAACC,OAAb,CAAqBZ,OAArB,CAAP;AACD,KAHN,EAIMU,IAJN,CAIWG,QAAQ,IAAI;AAChB,UAAIC,QAAQ,GAAGD,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,EAA+B,UAA/B,CAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,WAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGH,QAAQ,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvC,YAAIH,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAAZ,KAAqB,SAAzB,EAAoC;AACnCJ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAArC;AACD;AACC,SAHD,MAGO;AACNJ,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAAtC;AACA;AACD;AACF,KAhBN;AAiBE;;AAEHC,EAAAA,MAAM,GAAI;AACT;AACK,SAAKrB,aAAL,CAAmBH,KAAK,CAACyB,MAAzB;AACL,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,UAAD;AACF,MAAA,QAAQ,EAAG,IADT;AAEF,MAAA,MAAM,EAAG,KAAKxB,QAAL,CAAcyB,IAAd,CAAmB,IAAnB,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,CADD;AAOA;;AAlD+C;AAuDjDlC,QAAQ,CAACgC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBG,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FileBase64 from 'react-file-base64';\n\nexport default class App extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\t\n\t\tthis.state = { \n\t\t\tidentifedAs: '',\n\t\t\tfiles: []\n\t\t};\n\t}\n\n\tgetFiles(files){\n\t    this.setState({ files: files })\n\t  }\n\n\tidentifyImage (picture) {\n\t\tconst Clarifai = require('clarifai');\n\n\t\tconst clarifaiApp = new Clarifai.App({\n\t\t\tapiKey: 'ba7fec128a0243c18186d47d861edb35'\n\t\t});\n\n\t\tclarifaiApp.models.initModel({id: Clarifai.GENERAL_MODEL, version: \"aa7f35c01e0642fda5cf400f543e7c40\"})\n\t      .then(generalModel => {\n\t        return generalModel.predict(picture);\n\t      })\n\t      .then(response => {\n\t        let concepts = response['outputs'][0]['data']['concepts']\n\t        console.log(concepts)\n\n\t        for (let i=0; i < concepts.length; i++) {\n\t        \tif (concepts[i].name === \"looking\") {\n\t        \t\tconsole.log('true => ' + concepts[i].name)\n\t      \t\t\treturn\n\t        \t} else {\n\t        \t\tconsole.log('false => ' + concepts[i].name)\n\t        \t}\n\t        }\n\t      })\n\t  }\n\n\trender () {\n\t\t//this.identifyImage(\"https://jareddubina.com/images/portfolio/jrd.png\");\n\t\t\t    this.identifyImage(files.base64);\n\t\treturn (\n\t\t\t<div>\n\t            <FileBase64\n\t\t\t        multiple={ true }\n\t\t\t        onDone={ this.getFiles.bind(this) } />\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\n\nReactDOM.render(<App />, document.getElementById(\"image-sizer-app\"));"]},"metadata":{},"sourceType":"module"}