{"ast":null,"code":"var _jsxFileName = \"/Users/jareddubina/Desktop/Project-Image-Sizer/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FileBase64 from 'react-file-base64';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      identifedAs: '',\n      files: ''\n    };\n  }\n\n  getFiles(files) {\n    this.setState({\n      files: files\n    });\n    this.identifyImage(this.state.files[0].base64);\n  }\n\n  identifyImage(picture) {\n    const Clarifai = require('clarifai');\n\n    const clarifaiApp = new Clarifai.App({\n      apiKey: 'ba7fec128a0243c18186d47d861edb35'\n    });\n    const pictureBase64 = picture.split(',')[1];\n    clarifaiApp.models.predict(Clarifai.GENERAL_MODEL, {\n      base64: pictureBase64\n    }).then(response => {\n      let concepts = response['outputs'][0]['data']['concepts'];\n      console.log(concepts);\n\n      for (let i = 0; i < concepts.length; i++) {\n        if (concepts[i].name === \"looking\") {\n          console.log('true => ' + concepts[i].name);\n          return;\n        } else {\n          console.log('false => ' + concepts[i].name);\n        }\n      }\n    }).catch(err => alert(err));\n  }\n\n  render() {\n    //this.identifyImage(\"https://jareddubina.com/images/portfolio/jrd.png\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(FileBase64, {\n      multiple: true,\n      onDone: this.getFiles.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}), document.getElementById(\"image-sizer-app\"));","map":{"version":3,"sources":["/Users/jareddubina/Desktop/Project-Image-Sizer/src/index.js"],"names":["React","ReactDOM","FileBase64","App","Component","constructor","props","state","identifedAs","files","getFiles","setState","identifyImage","base64","picture","Clarifai","require","clarifaiApp","apiKey","pictureBase64","split","models","predict","GENERAL_MODEL","then","response","concepts","console","log","i","length","name","catch","err","alert","render","bind","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE,EADD;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAAb;AAIA;;AAEDC,EAAAA,QAAQ,CAACD,KAAD,EAAO;AACX,SAAKE,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAEA;AAAT,KAAd;AACA,SAAKG,aAAL,CAAmB,KAAKL,KAAL,CAAWE,KAAX,CAAiB,CAAjB,EAAoBI,MAAvC;AACD;;AAEHD,EAAAA,aAAa,CAAEE,OAAF,EAAW;AACvB,UAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,UAAMC,WAAW,GAAG,IAAIF,QAAQ,CAACZ,GAAb,CAAiB;AACpCe,MAAAA,MAAM,EAAE;AAD4B,KAAjB,CAApB;AAIA,UAAMC,aAAa,GAAGL,OAAO,CAACM,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAtB;AAEAH,IAAAA,WAAW,CAACI,MAAZ,CAAmBC,OAAnB,CAA2BP,QAAQ,CAACQ,aAApC,EAAmD;AAACV,MAAAA,MAAM,EAAEM;AAAT,KAAnD,EACEK,IADF,CACQC,QAAD,IAAc;AACd,UAAIC,QAAQ,GAAGD,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,EAA+B,UAA/B,CAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,WAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGH,QAAQ,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvC,YAAIH,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAAZ,KAAqB,SAAzB,EAAoC;AACnCJ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAArC;AACD;AACC,SAHD,MAGO;AACNJ,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,QAAQ,CAACG,CAAD,CAAR,CAAYE,IAAtC;AACA;AACD;AACF,KAbN,EAcEC,KAdF,CAcSC,GAAD,IAASC,KAAK,CAACD,GAAD,CAdtB;AAeE;;AAEHE,EAAAA,MAAM,GAAI;AACT;AAEA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,UAAD;AACF,MAAA,QAAQ,EAAG,IADT;AAEF,MAAA,MAAM,EAAG,KAAKzB,QAAL,CAAc0B,IAAd,CAAmB,IAAnB,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,CADD;AAOA;;AAnD+C;AAwDjDnC,QAAQ,CAACkC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FileBase64 from 'react-file-base64';\n\nexport default class App extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\t\n\t\tthis.state = { \n\t\t\tidentifedAs: '',\n\t\t\tfiles: ''\n\t\t};\n\t}\n\n\tgetFiles(files){\n\t    this.setState({ files: files })\n\t    this.identifyImage(this.state.files[0].base64);\n\t  }\n\n\tidentifyImage (picture) {\n\t\tconst Clarifai = require('clarifai');\n\n\t\tconst clarifaiApp = new Clarifai.App({\n\t\t\tapiKey: 'ba7fec128a0243c18186d47d861edb35'\n\t\t});\n\n\t\tconst pictureBase64 = picture.split(',')[1];\n\n\t\tclarifaiApp.models.predict(Clarifai.GENERAL_MODEL, {base64: pictureBase64})\n\t\t\t.then((response) => {\n\t        let concepts = response['outputs'][0]['data']['concepts']\n\t        console.log(concepts)\n\n\t        for (let i=0; i < concepts.length; i++) {\n\t        \tif (concepts[i].name === \"looking\") {\n\t        \t\tconsole.log('true => ' + concepts[i].name)\n\t      \t\t\treturn\n\t        \t} else {\n\t        \t\tconsole.log('false => ' + concepts[i].name)\n\t        \t}\n\t        }\n\t      })\n\t\t\t.catch((err) => alert(err))\n\t  }\n\n\trender () {\n\t\t//this.identifyImage(\"https://jareddubina.com/images/portfolio/jrd.png\");\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t            <FileBase64\n\t\t\t        multiple={ true }\n\t\t\t        onDone={ this.getFiles.bind(this) } />\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\n\nReactDOM.render(<App />, document.getElementById(\"image-sizer-app\"));"]},"metadata":{},"sourceType":"module"}